// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: electra/dao/membership.proto

package types

import (
	fmt "fmt"
	proto "github.com/gogo/protobuf/proto"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type Membership struct {
	Memberaddress           string `protobuf:"bytes,1,opt,name=memberaddress,proto3" json:"memberaddress,omitempty"`
	Nickname                string `protobuf:"bytes,2,opt,name=nickname,proto3" json:"nickname,omitempty"`
	Bio                     string `protobuf:"bytes,3,opt,name=bio,proto3" json:"bio,omitempty"`
	Role                    string `protobuf:"bytes,4,opt,name=role,proto3" json:"role,omitempty"`
	Ens                     string `protobuf:"bytes,5,opt,name=ens,proto3" json:"ens,omitempty"`
	Email                   string `protobuf:"bytes,6,opt,name=email,proto3" json:"email,omitempty"`
	Firstname               string `protobuf:"bytes,7,opt,name=firstname,proto3" json:"firstname,omitempty"`
	Lastname                string `protobuf:"bytes,8,opt,name=lastname,proto3" json:"lastname,omitempty"`
	Twiter                  string `protobuf:"bytes,9,opt,name=twiter,proto3" json:"twiter,omitempty"`
	Discord                 string `protobuf:"bytes,10,opt,name=discord,proto3" json:"discord,omitempty"`
	Github                  string `protobuf:"bytes,11,opt,name=github,proto3" json:"github,omitempty"`
	Linkedin                string `protobuf:"bytes,12,opt,name=linkedin,proto3" json:"linkedin,omitempty"`
	Telegram                string `protobuf:"bytes,13,opt,name=telegram,proto3" json:"telegram,omitempty"`
	Kyc                     bool   `protobuf:"varint,14,opt,name=kyc,proto3" json:"kyc,omitempty"`
	Termsconditionsignature string `protobuf:"bytes,15,opt,name=termsconditionsignature,proto3" json:"termsconditionsignature,omitempty"`
	Date                    string `protobuf:"bytes,16,opt,name=date,proto3" json:"date,omitempty"`
	Block                   int32  `protobuf:"varint,17,opt,name=block,proto3" json:"block,omitempty"`
}

func (m *Membership) Reset()         { *m = Membership{} }
func (m *Membership) String() string { return proto.CompactTextString(m) }
func (*Membership) ProtoMessage()    {}
func (*Membership) Descriptor() ([]byte, []int) {
	return fileDescriptor_2fdafdb8a1863521, []int{0}
}
func (m *Membership) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Membership) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Membership.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Membership) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Membership.Merge(m, src)
}
func (m *Membership) XXX_Size() int {
	return m.Size()
}
func (m *Membership) XXX_DiscardUnknown() {
	xxx_messageInfo_Membership.DiscardUnknown(m)
}

var xxx_messageInfo_Membership proto.InternalMessageInfo

func (m *Membership) GetMemberaddress() string {
	if m != nil {
		return m.Memberaddress
	}
	return ""
}

func (m *Membership) GetNickname() string {
	if m != nil {
		return m.Nickname
	}
	return ""
}

func (m *Membership) GetBio() string {
	if m != nil {
		return m.Bio
	}
	return ""
}

func (m *Membership) GetRole() string {
	if m != nil {
		return m.Role
	}
	return ""
}

func (m *Membership) GetEns() string {
	if m != nil {
		return m.Ens
	}
	return ""
}

func (m *Membership) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *Membership) GetFirstname() string {
	if m != nil {
		return m.Firstname
	}
	return ""
}

func (m *Membership) GetLastname() string {
	if m != nil {
		return m.Lastname
	}
	return ""
}

func (m *Membership) GetTwiter() string {
	if m != nil {
		return m.Twiter
	}
	return ""
}

func (m *Membership) GetDiscord() string {
	if m != nil {
		return m.Discord
	}
	return ""
}

func (m *Membership) GetGithub() string {
	if m != nil {
		return m.Github
	}
	return ""
}

func (m *Membership) GetLinkedin() string {
	if m != nil {
		return m.Linkedin
	}
	return ""
}

func (m *Membership) GetTelegram() string {
	if m != nil {
		return m.Telegram
	}
	return ""
}

func (m *Membership) GetKyc() bool {
	if m != nil {
		return m.Kyc
	}
	return false
}

func (m *Membership) GetTermsconditionsignature() string {
	if m != nil {
		return m.Termsconditionsignature
	}
	return ""
}

func (m *Membership) GetDate() string {
	if m != nil {
		return m.Date
	}
	return ""
}

func (m *Membership) GetBlock() int32 {
	if m != nil {
		return m.Block
	}
	return 0
}

func init() {
	proto.RegisterType((*Membership)(nil), "electra.dao.Membership")
}

func init() { proto.RegisterFile("electra/dao/membership.proto", fileDescriptor_2fdafdb8a1863521) }

var fileDescriptor_2fdafdb8a1863521 = []byte{
	// 354 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x92, 0xbd, 0x4e, 0x2b, 0x31,
	0x10, 0x85, 0xe3, 0x9b, 0x7f, 0xe7, 0xe6, 0xde, 0x60, 0x10, 0x8c, 0x50, 0xb4, 0x8a, 0x10, 0x45,
	0x1a, 0x92, 0x82, 0x86, 0x9a, 0x9e, 0x26, 0x25, 0x9d, 0x77, 0x3d, 0x24, 0xd6, 0xee, 0xda, 0x91,
	0xed, 0x08, 0xf2, 0x16, 0x3c, 0x16, 0x15, 0x4a, 0x49, 0x89, 0x92, 0x17, 0x41, 0xb6, 0x77, 0x83,
	0x28, 0xe8, 0xe6, 0x3b, 0xe7, 0x8c, 0xc6, 0x1e, 0x0d, 0x1d, 0x63, 0x81, 0x99, 0x33, 0x7c, 0x2e,
	0xb8, 0x9e, 0x97, 0x58, 0xa6, 0x68, 0xec, 0x4a, 0xae, 0x67, 0x6b, 0xa3, 0x9d, 0x66, 0x83, 0xca,
	0x9d, 0x09, 0xae, 0xaf, 0xde, 0x9b, 0x94, 0x3e, 0x1c, 0x13, 0xec, 0x9a, 0x0e, 0x63, 0x9e, 0x0b,
	0x61, 0xd0, 0x5a, 0x20, 0x13, 0x32, 0xed, 0x2f, 0x7e, 0x8a, 0xec, 0x92, 0xf6, 0x94, 0xcc, 0x72,
	0xc5, 0x4b, 0x84, 0x3f, 0x21, 0x70, 0x64, 0x36, 0xa2, 0xcd, 0x54, 0x6a, 0x68, 0x06, 0xd9, 0x97,
	0x8c, 0xd1, 0x96, 0xd1, 0x05, 0x42, 0x2b, 0x48, 0xa1, 0xf6, 0x29, 0x54, 0x16, 0xda, 0x31, 0x85,
	0xca, 0xb2, 0x33, 0xda, 0xc6, 0x92, 0xcb, 0x02, 0x3a, 0x41, 0x8b, 0xc0, 0xc6, 0xb4, 0xff, 0x24,
	0x8d, 0x75, 0x61, 0x54, 0x37, 0x38, 0xdf, 0x82, 0x7f, 0x47, 0xc1, 0x2b, 0xb3, 0x17, 0xdf, 0x51,
	0x33, 0x3b, 0xa7, 0x1d, 0xf7, 0x2c, 0x1d, 0x1a, 0xe8, 0x07, 0xa7, 0x22, 0x06, 0xb4, 0x2b, 0xa4,
	0xcd, 0xb4, 0x11, 0x40, 0x83, 0x51, 0xa3, 0xef, 0x58, 0x4a, 0xb7, 0xda, 0xa4, 0x30, 0x88, 0x1d,
	0x91, 0xc2, 0x14, 0xa9, 0x72, 0x14, 0x52, 0xc1, 0xdf, 0x6a, 0x4a, 0xc5, 0xde, 0x73, 0x58, 0xe0,
	0xd2, 0xf0, 0x12, 0x86, 0xd1, 0xab, 0xd9, 0xff, 0x31, 0xdf, 0x66, 0xf0, 0x6f, 0x42, 0xa6, 0xbd,
	0x85, 0x2f, 0xd9, 0x1d, 0xbd, 0x70, 0x68, 0x4a, 0x9b, 0x69, 0x25, 0xa4, 0x93, 0x5a, 0x59, 0xb9,
	0x54, 0xdc, 0x6d, 0x0c, 0xc2, 0xff, 0xd0, 0xfc, 0x9b, 0xed, 0x77, 0x28, 0xb8, 0x43, 0x18, 0xc5,
	0x1d, 0xfa, 0xda, 0x6f, 0x2c, 0x2d, 0x74, 0x96, 0xc3, 0xc9, 0x84, 0x4c, 0xdb, 0x8b, 0x08, 0xf7,
	0x37, 0x6f, 0xfb, 0x84, 0xec, 0xf6, 0x09, 0xf9, 0xdc, 0x27, 0xe4, 0xf5, 0x90, 0x34, 0x76, 0x87,
	0xa4, 0xf1, 0x71, 0x48, 0x1a, 0x8f, 0xa7, 0xf5, 0x55, 0xbc, 0x84, 0xbb, 0x70, 0xdb, 0x35, 0xda,
	0xb4, 0x13, 0x6e, 0xe2, 0xf6, 0x2b, 0x00, 0x00, 0xff, 0xff, 0x5a, 0x38, 0xe1, 0x5c, 0x33, 0x02,
	0x00, 0x00,
}

func (m *Membership) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Membership) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Membership) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Block != 0 {
		i = encodeVarintMembership(dAtA, i, uint64(m.Block))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0x88
	}
	if len(m.Date) > 0 {
		i -= len(m.Date)
		copy(dAtA[i:], m.Date)
		i = encodeVarintMembership(dAtA, i, uint64(len(m.Date)))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0x82
	}
	if len(m.Termsconditionsignature) > 0 {
		i -= len(m.Termsconditionsignature)
		copy(dAtA[i:], m.Termsconditionsignature)
		i = encodeVarintMembership(dAtA, i, uint64(len(m.Termsconditionsignature)))
		i--
		dAtA[i] = 0x7a
	}
	if m.Kyc {
		i--
		if m.Kyc {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x70
	}
	if len(m.Telegram) > 0 {
		i -= len(m.Telegram)
		copy(dAtA[i:], m.Telegram)
		i = encodeVarintMembership(dAtA, i, uint64(len(m.Telegram)))
		i--
		dAtA[i] = 0x6a
	}
	if len(m.Linkedin) > 0 {
		i -= len(m.Linkedin)
		copy(dAtA[i:], m.Linkedin)
		i = encodeVarintMembership(dAtA, i, uint64(len(m.Linkedin)))
		i--
		dAtA[i] = 0x62
	}
	if len(m.Github) > 0 {
		i -= len(m.Github)
		copy(dAtA[i:], m.Github)
		i = encodeVarintMembership(dAtA, i, uint64(len(m.Github)))
		i--
		dAtA[i] = 0x5a
	}
	if len(m.Discord) > 0 {
		i -= len(m.Discord)
		copy(dAtA[i:], m.Discord)
		i = encodeVarintMembership(dAtA, i, uint64(len(m.Discord)))
		i--
		dAtA[i] = 0x52
	}
	if len(m.Twiter) > 0 {
		i -= len(m.Twiter)
		copy(dAtA[i:], m.Twiter)
		i = encodeVarintMembership(dAtA, i, uint64(len(m.Twiter)))
		i--
		dAtA[i] = 0x4a
	}
	if len(m.Lastname) > 0 {
		i -= len(m.Lastname)
		copy(dAtA[i:], m.Lastname)
		i = encodeVarintMembership(dAtA, i, uint64(len(m.Lastname)))
		i--
		dAtA[i] = 0x42
	}
	if len(m.Firstname) > 0 {
		i -= len(m.Firstname)
		copy(dAtA[i:], m.Firstname)
		i = encodeVarintMembership(dAtA, i, uint64(len(m.Firstname)))
		i--
		dAtA[i] = 0x3a
	}
	if len(m.Email) > 0 {
		i -= len(m.Email)
		copy(dAtA[i:], m.Email)
		i = encodeVarintMembership(dAtA, i, uint64(len(m.Email)))
		i--
		dAtA[i] = 0x32
	}
	if len(m.Ens) > 0 {
		i -= len(m.Ens)
		copy(dAtA[i:], m.Ens)
		i = encodeVarintMembership(dAtA, i, uint64(len(m.Ens)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.Role) > 0 {
		i -= len(m.Role)
		copy(dAtA[i:], m.Role)
		i = encodeVarintMembership(dAtA, i, uint64(len(m.Role)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.Bio) > 0 {
		i -= len(m.Bio)
		copy(dAtA[i:], m.Bio)
		i = encodeVarintMembership(dAtA, i, uint64(len(m.Bio)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Nickname) > 0 {
		i -= len(m.Nickname)
		copy(dAtA[i:], m.Nickname)
		i = encodeVarintMembership(dAtA, i, uint64(len(m.Nickname)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Memberaddress) > 0 {
		i -= len(m.Memberaddress)
		copy(dAtA[i:], m.Memberaddress)
		i = encodeVarintMembership(dAtA, i, uint64(len(m.Memberaddress)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func encodeVarintMembership(dAtA []byte, offset int, v uint64) int {
	offset -= sovMembership(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *Membership) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Memberaddress)
	if l > 0 {
		n += 1 + l + sovMembership(uint64(l))
	}
	l = len(m.Nickname)
	if l > 0 {
		n += 1 + l + sovMembership(uint64(l))
	}
	l = len(m.Bio)
	if l > 0 {
		n += 1 + l + sovMembership(uint64(l))
	}
	l = len(m.Role)
	if l > 0 {
		n += 1 + l + sovMembership(uint64(l))
	}
	l = len(m.Ens)
	if l > 0 {
		n += 1 + l + sovMembership(uint64(l))
	}
	l = len(m.Email)
	if l > 0 {
		n += 1 + l + sovMembership(uint64(l))
	}
	l = len(m.Firstname)
	if l > 0 {
		n += 1 + l + sovMembership(uint64(l))
	}
	l = len(m.Lastname)
	if l > 0 {
		n += 1 + l + sovMembership(uint64(l))
	}
	l = len(m.Twiter)
	if l > 0 {
		n += 1 + l + sovMembership(uint64(l))
	}
	l = len(m.Discord)
	if l > 0 {
		n += 1 + l + sovMembership(uint64(l))
	}
	l = len(m.Github)
	if l > 0 {
		n += 1 + l + sovMembership(uint64(l))
	}
	l = len(m.Linkedin)
	if l > 0 {
		n += 1 + l + sovMembership(uint64(l))
	}
	l = len(m.Telegram)
	if l > 0 {
		n += 1 + l + sovMembership(uint64(l))
	}
	if m.Kyc {
		n += 2
	}
	l = len(m.Termsconditionsignature)
	if l > 0 {
		n += 1 + l + sovMembership(uint64(l))
	}
	l = len(m.Date)
	if l > 0 {
		n += 2 + l + sovMembership(uint64(l))
	}
	if m.Block != 0 {
		n += 2 + sovMembership(uint64(m.Block))
	}
	return n
}

func sovMembership(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozMembership(x uint64) (n int) {
	return sovMembership(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *Membership) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMembership
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Membership: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Membership: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Memberaddress", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMembership
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMembership
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMembership
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Memberaddress = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Nickname", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMembership
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMembership
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMembership
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Nickname = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Bio", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMembership
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMembership
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMembership
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Bio = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Role", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMembership
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMembership
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMembership
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Role = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Ens", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMembership
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMembership
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMembership
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Ens = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Email", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMembership
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMembership
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMembership
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Email = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Firstname", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMembership
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMembership
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMembership
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Firstname = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Lastname", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMembership
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMembership
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMembership
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Lastname = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 9:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Twiter", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMembership
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMembership
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMembership
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Twiter = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 10:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Discord", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMembership
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMembership
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMembership
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Discord = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 11:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Github", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMembership
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMembership
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMembership
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Github = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 12:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Linkedin", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMembership
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMembership
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMembership
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Linkedin = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 13:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Telegram", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMembership
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMembership
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMembership
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Telegram = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 14:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Kyc", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMembership
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Kyc = bool(v != 0)
		case 15:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Termsconditionsignature", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMembership
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMembership
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMembership
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Termsconditionsignature = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 16:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Date", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMembership
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMembership
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMembership
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Date = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 17:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Block", wireType)
			}
			m.Block = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMembership
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Block |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipMembership(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthMembership
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipMembership(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowMembership
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowMembership
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowMembership
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthMembership
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupMembership
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthMembership
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthMembership        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowMembership          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupMembership = fmt.Errorf("proto: unexpected end of group")
)
